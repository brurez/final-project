input CredentialsInput {
  email: String!
  password: String!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

scalar ModelID

type Mutation {
  """
  Creates a new petition
  """
  petitionCreate(
    """
    Parameters for PetitionCreate
    """
    input: PetitionCreateInput!
  ): PetitionCreatePayload

  """
  Updates a petition by id
  """
  petitionUpdate(
    """
    Parameters for PetitionUpdate
    """
    input: PetitionUpdateInput!
  ): PetitionUpdatePayload

  """
  Creates a new user
  """
  userCreate(
    """
    Parameters for UserCreate
    """
    input: UserCreateInput!
  ): UserToken

  """
  Deletes a user by ID
  """
  userDelete(
    """
    Parameters for UserDelete
    """
    input: UserDeleteInput!
  ): UserDeletePayload

  """
  Login user
  """
  userLogin(
    """
    Parameters for UserLogin
    """
    input: UserLoginInput!
  ): UserToken

  """
  Updates a user by id
  """
  userUpdate(
    """
    Parameters for UserUpdate
    """
    input: UserUpdateInput!
  ): UserUpdatePayload
}

type Petition {
  createdAt: ISO8601DateTime!
  description: String
  id: ModelID!
  numberOfVotes: Int!
  title: String
  updatedAt: ISO8601DateTime!
  userId: Int!
}

"""
Autogenerated input type of PetitionCreate
"""
input PetitionCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  petitionInput: PetitionInput!
}

"""
Autogenerated return type of PetitionCreate
"""
type PetitionCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  petition: Petition!
}

input PetitionInput {
  description: String!
  id: ModelID
  title: String!
}

"""
Autogenerated input type of PetitionUpdate
"""
input PetitionUpdateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  petitionInput: PetitionInput!
}

"""
Autogenerated return type of PetitionUpdate
"""
type PetitionUpdatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  petition: Petition!
}

type Query {
  """
  Get petition
  """
  petition(id: Int!): Petition!

  """
  Get petitions list
  """
  petitions: [Petition!]!

  """
  Get user
  """
  user(id: Int!): User!
}

type User {
  createdAt: ISO8601DateTime!
  email: String!
  firstName: String!
  id: ModelID!
  lastName: String!
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of UserCreate
"""
input UserCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userInput: UserInput!
}

"""
Autogenerated input type of UserDelete
"""
input UserDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of UserDelete
"""
type UserDeletePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}

input UserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String
}

"""
Autogenerated input type of UserLogin
"""
input UserLoginInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userLoginInput: CredentialsInput!
}

type UserToken {
  token: String
  user: User
}

"""
Autogenerated input type of UserUpdate
"""
input UserUpdateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  userInput: UserInput!
}

"""
Autogenerated return type of UserUpdate
"""
type UserUpdatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User!
}
